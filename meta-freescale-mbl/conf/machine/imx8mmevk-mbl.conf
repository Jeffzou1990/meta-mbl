# Copyright (c) 2019 Arm Limited and Contributors. All rights reserved.
#
# SPDX-License-Identifier: MIT

#@TYPE: Machine
#@NAME: NXP i.MX8MM Evaluation Kit
#@SOC: i.MX8MM
#@DESCRIPTION: Machine configuration for NXP i.MX8MMini EVK with extra features enabled

MACHINEOVERRIDES =. "imx8mmevk:${MACHINE}:"
include conf/machine/imx8mmevk.conf
require conf/include/mbl-default.conf

# ------------------------------------------------------------------------------
# MBL-specific (non-upstreamable) configuration
# ------------------------------------------------------------------------------

##############################################################################
# KERNEL symbol definitions for virtual/kernel build configuration
#
# KERNEL_CLASSES
#   mbl-fitimage.bbclass is inherited into kernel.bbclass processing by
#   defining this symbol to include mbl-fitimage.
# KERNEL_IMAGETYPE
#   The kernel is packages in a FIT image by specifying "fitImage"
# KERNEL_DEVICETREE
#   The kernel device tree is set to "freescale/fsl-imx8mm-evk.dtb" and
#   will put in FIT.
##############################################################################
KERNEL_CLASSES  = "mbl-fitimage"
KERNEL_DEVICETREE = "freescale/fsl-imx8mm-evk.dtb"
KERNEL_IMAGETYPES = "fitImage"

# Not supported in the 4.14 FSL kernel tree
KERNEL_DEVICETREE_remove = "freescale/fsl-imx8mm-evk-inmate.dtb "

# This directive is a temporary measure and will be changed when the
# imx8mmevk-mbl BSP implements a recipe to create a FIT image consistent
# with the MBL bootflow.
PREFERRED_PROVIDER_virtual/bootloader = "u-boot-imx"

##############################################################################
# U-BOOT symbol definitions
#
# SPL_BINARY
#   Specify the name of U-boot SPL binary. No SPL is needed if it is empty.
# UBOOT_CONFIG[sd]
#   Refers to the MBL specific u-boot config for sdcard
#   necessary for any differentation required @ u-boot level for mbed Linux.
##############################################################################
UBOOT_SUFFIX = "bin"
UBOOT_BINARY = "u-boot.${UBOOT_SUFFIX}"
UBOOT_CONFIG[sd] = "imx8mm_evk_mbl_config,sdcard"
UBOOT_ENTRYPOINT = "0x40480000"
UBOOT_DTB_LOADADDRESS = "0x43000000"
UBOOT_IMAGE = "mbl-u-boot.bin"
UBOOT_SIGN_ENABLE = "1"

# This directive is a temporary measure and will be changed when the
# imx8mmevk-mbl BSP implements a recipe to apply MBL specific changes and
# additions.
PREFERRED_PROVIDER_virtual/kernel = "linux-imx"

# Specify the ATF recipe to be used for this machine.
PREFERRED_PROVIDER_virtual/atf = "atf-${MACHINE}"

# imx-boot package - pulls in firmware binaries for training DDR
MACHINE_EXTRA_RRECOMMENDS += " imx-boot"

# Here we remove the standalone kernel Image and instead include the FIT image
# in mbl-fitimage class.
IMAGE_BOOT_FILES_remove = "Image"

# Remove all recipes except kernel modules recipe in fsl-bsp-release
BBMASK += "/meta-fsl-bsp-release/imx/meta-bsp/recipes-browser/"
BBMASK += "/meta-fsl-bsp-release/imx/meta-bsp/recipes-connectivity/"
BBMASK += "/meta-fsl-bsp-release/imx/meta-bsp/recipes-core/"
BBMASK += "/meta-fsl-bsp-release/imx/meta-bsp/recipes-devtools/"
BBMASK += "/meta-fsl-bsp-release/imx/meta-bsp/recipes-graphics/"
BBMASK += "/meta-fsl-bsp-release/imx/meta-bsp/recipes-multimedia/"
BBMASK += "/meta-fsl-bsp-release/imx/meta-bsp/recipes-security/"
BBMASK += "/meta-fsl-bsp-release/imx/meta-bsp/recipes-utils/"
BBMASK += "/meta-fsl-bsp-release/imx/meta-bsp/recipes-kernel/linux/"
BBMASK += "/meta-fsl-bsp-release/imx/meta-bsp/recipes-kernel/linux-firmware/"
BBMASK += "/meta-fsl-bsp-release/imx/meta-bsp/recipes-kernel/kernel-modules/kernel-module-imx-gpu-viv*.bb"

# Because of license restrictions we want to use the firmware-imx_8.0.bb and
# fsl-eula-unpack.bbclass from meta-fsl-bsp-release instead the one provided
# by meta-freescale.
BBMASK += "/meta-fsl-bsp-release/imx/meta-bsp/recipes-bsp/(?!firmware-(?:qca|imx))"
BBMASK += "/meta-fsl-bsp-release/imx/meta-bsp/classes/(?!fsl-eula-unpack\.bbclass)"
BBMASK += "/meta-freescale/recipes-bsp/firmware-imx"
BBMASK += "/meta-freescale/classes/fsl-eula-unpack.bbclass"

# We need to set the EULA file from meta-fsl-bsp-release instead of
# meta-freescale/EULA
FSL_EULA_FILE = "${OEROOT}/layers/meta-fsl-bsp-release/imx/EULA.txt"

INITRAMFS_IMAGE_BUNDLE = "1"

# Remove the Qualcomm Wifi firmware (qca*) RRECOMMENDS due to license restrictions
MACHINE_EXTRA_RRECOMMENDS_remove = "packagegroup-fsl-qca9377 packagegroup-fsl-qca6174"

# Specify qca9377 firmware binary to be released with this machine, otherwise
# only script is released to download binary on the board later.
MACHINE_FEATURES += "qca9377-bin"

# Add in WiFi driver from meta-freescale-bsp-release
MACHINE_EXTRA_RRECOMMENDS_append = " kernel-module-qca9377 "
MACHINE_EXTRA_RRECOMMENDS_append = " \
    ${@bb.utils.contains('MACHINE_FEATURES', 'qca9377-bin', 'firmware-qca9377', 'kernel-module-qca9377-firmware-tools', d)} \
"

MACHINE_FIRMWARE_remove = " linux-firmware-ath10k"

# The name of the usbgadget ethernet interface to be used for debugging
MBL_DBG_IFNAME = "usbdbg0"

##############################################################################
# Partition layout config
##############################################################################
MBL_WKS_BOOTLOADER1_FILENAME = "imx-boot-imx8mmevk-mbl-sd.bin-flash_evk"
MBL_WKS_BOOTLOADER1_OFFSET_BANK1_KiB = "33"
MBL_WKS_BOOTLOADER1_SIZE_KiB = "991"
MBL_WKS_BOOTLOADER1_IS_BL2 = "1"

MBL_WKS_BOOTLOADER2_FILENAME = "fip.bin"
MBL_WKS_BOOTLOADER2_SIZE_KiB = "2048"
MBL_WKS_BOOTLOADER2_IS_BL3 = "1"

# From "mmc extcsd read /dev/mmcblk2"
# Uncomment this if you are using the eMMC rather than an SD-Card
# MBL_FLASH_ERASE_BLOCK_SIZE_KiB = "512"

# The board's eMMC is "16GB", but we also support using an SD-Card. We assume
# an 8GB or larger SD Card. 8GB =~ 7.4GiB. Round down to 7GiB to be on the safe
# side.
#
# Override this variable in local.conf if you use the on-board eMMC or a
# different size of SD Card.
MBL_WKS_STORAGE_SIZE_MiB ?= "7168"

##############################################################################
# SystemD watchdog config
##############################################################################
# Set the max timeout. The imx series watchdog driver explicitly defines a max
# watchdog timeout of 128 seconds.
MBL_WATCHDOG_TIMEOUT_SECS ?= "128"
# Set the device file name for the hardware watchdog
MBL_WATCHDOG_DEVICE_FILENAME ?= "/dev/watchdog"
