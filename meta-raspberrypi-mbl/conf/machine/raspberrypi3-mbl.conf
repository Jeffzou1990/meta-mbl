# Copyright (c) 2018 Arm Limited and Contributors. All rights reserved.
#
# SPDX-License-Identifier: MIT

#@TYPE: Machine
#@NAME: RaspberryPi 3 Development Board
#@DESCRIPTION: Machine configuration for the RaspberryPi 3 with extra features

MACHINEOVERRIDES =. "raspberrypi3:${MACHINE}:"
include conf/machine/raspberrypi3.conf

# The IMAGE_BOOT_FILES settings from meta-raspberrypi's config files is not
# suitable for us so clear it after including raspberrypi3.conf and let our
# conf files start again from scratch. This must be done before including
# "mbl-default.conf" because that conf file adds things to IMAGE_BOOT_FILES
# that we actually want.
IMAGE_BOOT_FILES = ""

require conf/include/mbl-default.conf

# ------------------------------------------------------------------------------
# non-MBL-specific (upstreamable) configuration
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
# MBL-specific (non-upstreamable) configuration
# ------------------------------------------------------------------------------


##############################################################################
# KERNEL symbol definitions for virtual/kernel build configuration
#
# KERNEL_CLASSES
#   mbl-fitimage.bbclass is inherited into kernel.bbclass processing by
#   defining this symbol to include mbl-fitimage.
# KERNEL_IMAGETYPE
#   The kernel is packages in a FIT image by specifying "fitImage"
# KERNEL_DEVICETREE
#   Specify the devices tree's to be includes in the FIT image.
##############################################################################
KERNEL_CLASSES  = "mbl-fitimage"
KERNEL_IMAGETYPE = "fitImage"
KERNEL_DEVICETREE = "bcm2710-rpi-3-b-plus.dtb bcm2710-rpi-3-b.dtb"

##############################################################################
# U-BOOT Symbol Definitions
#
# UBOOT_SIGN_ENABLE
#   This is used to enable u-boot verified boot. See uboot-sign.bbclass for
#   more information.
##############################################################################
UBOOT_MACHINE = "rpi_3_32b_defconfig"
UBOOT_ENTRYPOINT = "0x04000000"
UBOOT_DTB_LOADADDRESS = "0x03000000"
UBOOT_IMAGE = "mbl-u-boot.bin"
UBOOT_SIGN_ENABLE = "1"
RPI_USE_U_BOOT = "1"

# Tell the meta-raspberrypi layer to send Linux console output to the serial
# console
ENABLE_UART = "1"

# The meta-raspberrypi layer generates a FIT image (boot.scr) using the
# rpi-u-boot-scr.bb recipe. As MBL meta-mbl generates the FIT image
# using mbl-fitimage.bbclass, rpi-u-boot-scr.bb is inhibited from running.
INHERIT += "blacklist"
PNBLACKLIST[rpi-u-boot-scr] = "Do not use rpi-u-boot-scr.bb to generate FIT image."

# Specify the ATF recipe to be used for this machine.
PREFERRED_PROVIDER_virtual/atf = "atf-${MACHINE}"

# rpi3-extra-dtb-overlay package - add manually created dtb overlay
MACHINE_EXTRA_RRECOMMENDS += " rpi3-extra-dtb-overlay "

# A valid u-boot.bin without any packed data is validated by earlier stage
# bootloader. So include u-boot-nodtb.bin here because u-boot.bin is packed
# with u-boot.dtb.

IMAGE_BOOT_FILES += "bcm2835-bootfiles/* \
                 ${@make_dtb_boot_files(d)} \
                 ${@bb.utils.contains('RPI_USE_U_BOOT', '1', \
                    '${KERNEL_IMAGETYPE} u-boot-nodtb.bin;${SDIMG_KERNELIMAGE}', \
                    '${KERNEL_IMAGETYPE};${SDIMG_KERNELIMAGE}', d)} \
                 "

# The name of the ethernet interface to be used for debugging
MBL_DBG_IFNAME = "eth1"

##############################################################################
# Partition layout config
##############################################################################
# BL2 is stored in a FAT partition on rpi3, not in an area of raw storage
MBL_WKS_BOOTLOADER1_SKIP = "1"

MBL_WKS_BOOTLOADER2_FILENAME = "fip2.bin"
MBL_WKS_BOOTLOADER2_IS_BL3 = "1"

MBL_WKS_BOOTLOADER_FS_SKIP = "0"

# We assume an 8GB or larger SD Card. 8GB =~ 7.4GiB. Round down to 7GiB to be
# on the safe side.
#
# Override this variable in local.conf if you use a different size of SD Card.
MBL_WKS_STORAGE_SIZE_MiB ?= "7168"

##############################################################################
# SystemD watchdog config
##############################################################################
# Set the max timeout for RPI3. The RPI watchdog hardware has a max timeout of
# 15 seconds.
MBL_WATCHDOG_TIMEOUT_SECS ?= "15"
# Set the device file name for the hardware watchdog
MBL_WATCHDOG_DEVICE_FILENAME ?= "/dev/watchdog"
