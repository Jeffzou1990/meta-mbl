# Copyright (c) 2018 Arm Limited and Contributors. All rights reserved.
#
# SPDX-License-Identifier: MIT

DEPENDS += "u-boot-tools-native"

inherit mbl-artifact-names

require recipes-bsp/atf/atf.inc

# MBL_ATF_VERSION should be updated to match version pointed to by SRCREV
MBL_ATF_VERSION = "2.0"
SRCREV_atf = "6a80c8bbc961ab55a562e0030247419e363286f7"

# We do not compile bl2 and fip.bin here, because we can speicify two raw images in wks file.
MBL_UNIFIED_BIN = "bl2.bin.imx"

ATF_COMPILE_FLAGS += " \
      AARCH32_SP=optee \
      ARCH=aarch32 \
      ARM_ARCH_MAJOR=7 \
      ARM_CORTEX_A7=yes \
      CROSS_COMPILE=${TARGET_PREFIX} \
      NEED_BL2=yes \
"

# Notes on uboot.cfgout
# This is a file automatically generated by u-boot when compiling up u-boot
# image. uboot.cfgout is a necessary input when generating a .imx image
# To regenerate uboot.cfgout just do
# "make <machine_defconfig>;make u-boot.imx CROSS_COMPILE=your-x-compiler-"
# This uboot.cfgout file will be removed later here because we can use the
# one from u-boot when u-boot is updated.
do_compile_append() {
	# Get the entry point
	ENTRY=`${HOST_PREFIX}readelf ${B}/${PLATFORM}/bl2/bl2.elf -h | grep "Entry" | awk '{print $4}'`

	# Generate the .imx binary
	uboot-mkimage -n ${DEPLOY_DIR_IMAGE}/u-boot-dtb.cfgout -T imximage -e ${ENTRY} -d ${B}/${PLATFORM}/${MBL_BL2_FILENAME} ${B}/${PLATFORM}/${MBL_UNIFIED_BIN}

	# Create signed FIP image.
	oe_runmake ${ATF_COMPILE_FLAGS} BL2=${B}/${PLATFORM}/${MBL_BL2_FILENAME} BL2_AT_EL3=0 fip
}

do_deploy_append() {
	install -D -p -m 0644 ${B}/${PLATFORM}/${FIP_BIN} ${DEPLOYDIR}
}
